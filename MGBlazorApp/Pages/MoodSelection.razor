@page "/mood-selection"
@using MGBlazorApp.Models
@inject NavigationManager Navigation

<PageTitle>Select Your Mood - MoodGroove</PageTitle>

<div class="mood-selection-container">
    <div class="mood-header">
        <h1>ðŸŽ­ How are you feeling today?</h1>
        <p>Select your current mood to get the perfect playlist</p>
    </div>

    <div class="mood-grid">
        @foreach (var mood in moods)
        {
            <div class="mood-card @(selectedMood?.Type == mood.Type ? "selected" : "")" 
                 @onclick="() => SelectMood(mood)"
                 style="border-color: @mood.Color">
                <div class="mood-emoji">@mood.Emoji</div>
                <h3>@mood.Name</h3>
                <p>@mood.Description</p>
                <div class="mood-genres">
                    @foreach (var genre in mood.AssociatedGenres.Take(3))
                    {
                        <span class="genre-tag">@genre</span>
                    }
                </div>
            </div>
        }
    </div>

    @if (selectedMood != null)
    {
        <div class="selected-mood-info">
            <h3>Perfect! You're feeling @selectedMood.Name @selectedMood.Emoji</h3>
            <p>@selectedMood.Description</p>
            <div class="action-buttons">
                <button class="btn btn-primary" @onclick="GeneratePlaylist">
                    ðŸŽµ Generate Playlist
                </button>
                <button class="btn btn-secondary" @onclick="DetectMood">
                    ðŸ¤– Auto-Detect Mood
                </button>
            </div>
        </div>
    }
</div>

@code {
    private List<Mood> moods = MoodData.GetAllMoods();
    private Mood? selectedMood;

    private void SelectMood(Mood mood)
    {
        selectedMood = mood;
    }

    private void GeneratePlaylist()
    {
        if (selectedMood != null)
        {
            Navigation.NavigateTo($"/playlists?mood={selectedMood.Type}");
        }
    }

    private void DetectMood()
    {
        // TODO: Implement mood detection logic
        // For now, randomly select a mood
        var random = new Random();
        selectedMood = moods[random.Next(moods.Count)];
        StateHasChanged();
    }
}

<style>
    .mood-selection-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .mood-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .mood-header h1 {
        color: #1db954;
        font-size: 2.5rem;
        margin-bottom: 1rem;
        font-weight: 700;
    }

    .mood-header p {
        color: rgba(255, 255, 255, 0.8);
        font-size: 1.2rem;
    }

    .mood-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-bottom: 3rem;
    }

    .mood-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        position: relative;
        overflow: hidden;
    }

    .mood-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--mood-color, #1db954);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .mood-card:hover::before,
    .mood-card.selected::before {
        opacity: 1;
    }

    .mood-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        border-color: currentColor;
    }

    .mood-card.selected {
        background: rgba(29, 185, 84, 0.2);
        border-color: #1db954;
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(29, 185, 84, 0.4);
    }

    .mood-emoji {
        font-size: 4rem;
        margin-bottom: 1rem;
    }

    .mood-card h3 {
        color: #1db954;
        margin-bottom: 0.5rem;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .mood-card p {
        color: rgba(255, 255, 255, 0.8);
        margin-bottom: 1rem;
        line-height: 1.5;
    }

    .mood-genres {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        justify-content: center;
    }

    .genre-tag {
        background: rgba(29, 185, 84, 0.3);
        color: #1db954;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .selected-mood-info {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        border: 2px solid #1db954;
    }

    .selected-mood-info h3 {
        color: #1db954;
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }

    .selected-mood-info p {
        color: rgba(255, 255, 255, 0.8);
        margin-bottom: 2rem;
        font-size: 1.1rem;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn {
        padding: 12px 24px;
        border-radius: 25px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-primary {
        background: linear-gradient(45deg, #1db954, #1ed760);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(29, 185, 84, 0.4);
    }

    .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 2px solid rgba(255, 255, 255, 0.3);
    }

    .btn-secondary:hover {
        background: rgba(255, 255, 255, 0.2);
    }

    @media (max-width: 768px) {
        .mood-grid {
            grid-template-columns: 1fr;
        }
        
        .action-buttons {
            flex-direction: column;
            align-items: center;
        }
        
        .btn {
            width: 100%;
            max-width: 300px;
        }
    }
</style>